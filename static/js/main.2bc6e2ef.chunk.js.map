{"version":3,"sources":["services/firebase.js","components/Novel.js","components/Novels.js","services/novelsService.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","collection","Novel","link","name","date","className","href","Novels","React","useState","isLoading","setLoading","novels","setNovels","serverRequest","useCallback","a","orderBy","limit","get","then","docs","map","x","data","Date","dateNumber","console","log","length","setTimeout","useEffect","eventAction","event","window","addEventListener","removeEventListener","style","marginTop","textAlign","type","onClick","disabled","novel","i","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAkBAA,gBAXqB,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAMT,IAEeC,EAFNR,cAESS,WAAW,UCCdC,MAVf,YAAsC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,KACrB,OADmC,EAARC,KAEzB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SACZ,uBAAGC,KAAMJ,GAAOC,MCiDTI,MAvDf,WAAmB,IAAD,EACgBC,IAAMC,UAAS,GAD/B,mBACTC,EADS,KACEC,EADF,OAEYH,IAAMC,SAA+B,IAFjD,mBAETG,EAFS,KAEDC,EAFC,KAIVC,EAAgBN,IAAMO,YAAN,sBAAkB,4BAAAC,EAAA,6DACtCL,GAAW,GAD2B,SCFjCZ,EACJkB,QAAQ,OAAQ,QAChBC,MAAM,IACNC,MACAC,MAAK,SAACR,GACL,OAAOA,EAAOS,KACXC,KAAI,SAACC,GAAD,OAAOA,EAAEC,UACbF,KACC,SAACC,GAAD,kBAAO,CAAN,eAAgCA,GAAjC,IAAoCnB,KAAM,IAAIqB,KAAKF,EAAEG,oBDNrB,UAEhCd,EAFgC,OAGtCe,QAAQC,IAAIhB,GAEU,IAAlBA,EAAOiB,OAL2B,uBAMpCC,YAAW,WACThB,MACC,KARiC,0BAWtCD,EAAUD,GACVD,GAAW,GAZ2B,4CAarC,IAWH,OATAH,IAAMuB,WAAU,WACd,IAAMC,EAAc,SAACC,GACnBnB,KAIF,OAFAkB,IACAE,OAAOC,iBAAiB,QAASH,GAAa,GACvC,kBAAME,OAAOE,oBAAoB,QAASJ,MAChD,CAAClB,IAGF,yBAAKT,UAAU,aACb,yBAAKgC,MAAO,CAAEC,UAAW,OAAQC,UAAW,WAC1C,2BACE,4BACEC,KAAK,SACLC,QAAS/B,EAAY,KAAOI,EAC5B4B,SAAUhC,EACVL,UAAU,0BAETK,EAAY,aAAe,WAGhC,yBAAKL,UAAU,UACZO,EAAOU,KAAI,SAAUqB,EAAOC,GAC3B,OACE,yBAAKC,IAAKF,EAAMzC,KAAMG,UAAU,OAC9B,kBAAC,EAAUsC,WEhDZG,MAJf,WACE,OAAO,kBAAC,EAAD,O,MCATC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2bc6e2ef.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n// Add the Firebase services that you want to use\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDaDB2KAvmTReM02MqiQiY0XOG0WNpAYVI\",\n  authDomain: \"novel-reader-250a9.firebaseapp.com\",\n  databaseURL: \"https://novel-reader-250a9.firebaseio.com\",\n  projectId: \"novel-reader-250a9\",\n  storageBucket: \"novel-reader-250a9.appspot.com\",\n  messagingSenderId: \"985891827070\",\n  appId: \"1:985891827070:web:b0af58909bc390be9d172f\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nvar db = firebase.firestore();\n\nexport default db.collection(\"novels\");\n","import React from \"react\";\n\n/** @typedef {object} Novel\n * @property {string} name\n * @property {string} link\n * @property {number} dateNumber\n * @property {Date} date\n */\n\n/**\n *\n * @param {Novel} param0\n */\nfunction Novel({ link, name, date }) {\n  return (\n    <div className=\"container\">\n      <h5 className=\"novel\">\n        <a href={link}>{name}</a>\n      </h5>\n    </div>\n  );\n}\n\nexport default Novel;\n","import React from \"react\";\nimport { getNovels } from \"../services/novelsService\";\nimport Novel from \"./Novel\";\n\n/** @typedef {object} Novel\n * @property {string} name\n * @property {string} link\n * @property {number} dateNumber\n * @property {Date} date\n */\n\nfunction Novels() {\n  const [isLoading, setLoading] = React.useState(false);\n  const [novels, setNovels] = React.useState(/**@type {Novel[]}*/ ([]));\n\n  const serverRequest = React.useCallback(async () => {\n    setLoading(true);\n    const novels = await getNovels();\n    console.log(novels);\n    // If nothing returned, retry in 1sec\n    if (novels.length === 0) {\n      setTimeout(() => {\n        serverRequest();\n      }, 1000);\n      return;\n    }\n    setNovels(novels);\n    setLoading(false);\n  }, []);\n\n  React.useEffect(() => {\n    const eventAction = (event) => {\n      serverRequest();\n    };\n    eventAction();\n    window.addEventListener(\"focus\", eventAction, false);\n    return () => window.removeEventListener(\"focus\", eventAction);\n  }, [serverRequest]);\n\n  return (\n    <div className=\"container\">\n      <div style={{ marginTop: \"50px\", textAlign: \"center\" }}>\n        <p>\n          <button\n            type=\"button\"\n            onClick={isLoading ? null : serverRequest}\n            disabled={isLoading}\n            className=\"btn btn-primary btn-lg\"\n          >\n            {isLoading ? \"Updating..\" : \"Update\"}\n          </button>\n        </p>\n        <div className=\"novels\">\n          {novels.map(function (novel, i) {\n            return (\n              <div key={novel.link} className=\"row\">\n                <Novel {...novel} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Novels;\n","import db from \"./firebase\";\n\n/** @typedef {object} Novel\n * @property {string} name\n * @property {string} link\n * @property {number} dateNumber\n * @property {Date} date\n */\n\n/**\n * @returns {Promise<Novel[]>}\n */\nexport function getNovels() {\n  return db\n    .orderBy(\"name\", \"desc\")\n    .limit(10)\n    .get()\n    .then((novels) => {\n      return novels.docs\n        .map((x) => x.data())\n        .map(\n          (x) => /** @type {Novel}*/ ({ ...x, date: new Date(x.dateNumber) })\n        );\n    });\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Novels from \"./components/Novels\";\n\nfunction App() {\n  return <Novels></Novels>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}